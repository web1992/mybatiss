<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
	  http://www.springframework.org/schema/beans  
	  http://www.springframework.org/schema/beans/spring-beans.xsd  
	  http://www.springframework.org/schema/aop  
	  http://www.springframework.org/schema/aop/spring-aop.xsd
	  http://www.springframework.org/schema/tx  
	  http://www.springframework.org/schema/tx/spring-tx.xsd
	  http://www.springframework.org/schema/context   
      http://www.springframework.org/schema/context/spring-context.xsd">


    <!-- 注解事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- druid 数据库连接池 -->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- 统计监控过滤器 -->
        <property name="filters" value="stat"/>

        <!-- 连接池设置 -->
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <property name="maxWait" value="${jdbc.maxWait}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="select 1 from dual"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <property name="poolPreparedStatements" value="true"/>
        <property name="maxOpenPreparedStatements" value="20"/>

        <!-- 监控日志保存到文件 -->
        <property name="timeBetweenLogStatsMillis" value="300000"/>

        <!-- 打开removeAbandoned功能 用来关闭长时间不使用的连接-->
        <property name="removeAbandoned" value="true"/>
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800"/>
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true"/>
    </bean>

    <!-- SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="druidDataSource"/>
        <property name="typeAliasesPackage" value="com.xxx"/>
        <property name="configLocation" value="classpath:/config/mybatis/mybatis-config.xml"/>
    </bean>
    <!-- ScanMapperFiles -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xxx"/>
        <property name="markerInterface" value="com.xxx.common.dao.BaseDao"/>
    </bean>
    <!-- 事务配置 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druidDataSource"/>
    </bean>

    <!-- tx配置事务 start -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="del*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>
    <!-- 第一个*代表所有的返回值类型;第二个*代表所有的类;第三个*代表类所有方法;最后一个..代表所有的参数 -->
    <aop:config>
        <aop:pointcut id="interceptorPointCuts" expression="execution(* cn.web1992.**.srv.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts"/>
    </aop:config>
    <!-- tx配置事务 end -->
</beans>	  	   